name: Linux Build

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64:latest
    if: ${{ startsWith(github.ref, 'refs/tags') || !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
    - uses: actions/checkout@v2
      
    - name: Checkout submodules
      run: | 
        git config --global --add safe.directory /__w/samseg/samseg
        git submodule init
        git submodule update

    - name: Install CMake and Zlib
      run: | 
        yum install -y cmake3 zlib-devel
        ln -s /usr/bin/cmake3 /usr/bin/cmake

    - name: Install correct compilers for ITK v.4.13.2 
      run: |
        conda install -c conda-forge gxx_linux-64=7.5 gcc_linux-64=7.5 sysroot_linux-64=2.17
        export CC=$CONDA/envs/samseg/bin/x86_64-conda_cos6-linux-gnu-gcc
        export CXX=$CONDA/envs/samseg/bin/x86_64-conda_cos6-linux-gnu-g++
        
    - name: Build ITK
      run: |
        mkdir ITK-build
        cd ITK-build
        cmake \
            -DBUILD_SHARED_LIBS=OFF \
            -DBUILD_TESTING=OFF \
            -DBUILD_EXAMPLES=OFF \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=../ITK-install \
            ../ITK
        make install
        cd ..
 
    - name: Build samseg
      run: |
        .github/workflows/linux_build.sh /opt/python/cp36-cp36m/bin/python
        .github/workflows/linux_build.sh /opt/python/cp37-cp37m/bin/python
        .github/workflows/linux_build.sh /opt/python/cp38-cp38/bin/python
        .github/workflows/linux_build.sh /opt/python/cp39-cp39/bin/python
        ls dist/*.whl | xargs -n1 auditwheel repair
      env:
        ITK_DIR: ITK-install


    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-wheels
        path: wheelhouse/*.whl

    - name: Upload to PyPI
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
      run: |
        $PYTHON -m pip install twine
        $PYTHON -m twine upload wheelhouse/*.whl -u __token__ -p "$PASSWORD"
      env:
        PASSWORD: ${{ secrets.PYPI_TOKEN }}
        PYTHON: /opt/python/cp38-cp38/bin/python
